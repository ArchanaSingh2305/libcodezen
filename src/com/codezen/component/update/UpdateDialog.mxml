<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  alwaysInFront="true"
		  maximizable="false" resizable="false" currentState="{_updateState}"
		  showStatusBar="false" width="530" height="180"
		  backgroundColor="#292929" height.INSTALL_UPDATE="382" height.UPDATE_AVAILABLE="382" xmlns:mx="library://ns.adobe.com/flex/mx" >
	<s:states>
		<s:State name="CHECK_UPDATE" enterState="{height=180}"/>
		<s:State name="INSTALL_UPDATE"/>
		<s:State name="NO_UPDATE" enterState="{height=180}"/>
		<s:State name="UPDATE_AVAILABLE"/>
		<s:State name="UPDATE_DOWNLOADING" enterState="{height=180}"/>
		<s:State name="UPDATE_ERROR" enterState="{height=180}"/>
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace ns "library://ns.adobe.com/flex/halo";
		
		.label{
			color: #FFFFFF;
			font-family: "Verdana";
		}
		
		.button{
			color: #FFFFFF;
			chrome-color: #000000;
			base-color: #000000;
			font-family: "Verdana";
		}
	</fx:Style>
	
	<fx:Metadata>
		[Event(name="checkUpdate", type="flash.events.Event")]
		[Event(name="downloadUpdate", type="flash.events.Event")]
		[Event(name="downloadUpdate", type="flash.events.Event")]
		[Event(name="cancelUpdate", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			public static var EVENT_CHECK_UPDATE:String = "checkUpdate";
			public static var EVENT_INSTALL_UPDATE:String = "installUpdate";
			public static var EVENT_DOWNLOAD_UPDATE:String = "downloadUpdate";
			public static var EVENT_CANCEL_UPDATE:String = "cancelUpdate";
			public static var EVENT_INSTALL_LATER:String = "installLater";
			
			[Bindable] public static var UPDATE_DOWNLOADING:String = "UPDATE_DOWNLOADING";
			[Bindable] public static var INSTALL_UPDATE:String = "INSTALL_UPDATE";
			[Bindable] public static var UPDATE_AVAILABLE:String = "UPDATE_AVAILABLE";
			[Bindable] public static var NO_UPDATE:String = "NO_UPDATE";
			[Bindable] public static var CHECK_UPDATE:String = "CHECK_UPDATE";
			[Bindable] public static var UPDATE_ERROR:String = "UPDATE_ERROR";
			
			[Bindable] private var _isFirstRun:String;
			[Bindable] private var _installedVersion:String;
			[Bindable] private var _updateVersion:String;
			[Bindable] private var _updateDescription:String;
			[Bindable] private var _applicationName:String;
			[Bindable] private var _updateState:String;
			[Bindable] private var _errorText:String = "There was an error checking for updates.";
			
			public function set isFirstRun(value:String):void
			{
				_isFirstRun = value;
			}
			
			public function set installedVersion(value:String):void
			{
				_installedVersion = value;
			}
			
			public function set upateVersion(value:String):void
			{
				_updateVersion = value;
			}
			
			public function set updateState(value:String):void
			{
				_updateState = value;
			}
			
			public function set applicationName(value:String):void
			{
				_applicationName = value;
			}
			
			public function set description(value:String):void
			{
				_updateDescription = value;
			}
			
			public function set errorText(value:String):void
			{
				_errorText = value;
			}
			
			public function downloadProgress(value:Number):void
			{
				if(progressBar) progressBar.setProgress(value, 100);
			}
			
			private function continueUpdate():void
			{
				if (currentState == CHECK_UPDATE){
					dispatchEvent(new Event(EVENT_CHECK_UPDATE));
				} else if (currentState == UPDATE_AVAILABLE) {
					dispatchEvent(new Event(EVENT_DOWNLOAD_UPDATE));
				}else if (currentState == INSTALL_UPDATE) {
					dispatchEvent(new Event(EVENT_INSTALL_UPDATE));
				}
			}
			
			private function cancelUpdate():void
			{
				if (this.currentState == INSTALL_UPDATE) {
					this.dispatchEvent(new Event(EVENT_INSTALL_LATER));
					return;
				}
				this.dispatchEvent(new Event(EVENT_CANCEL_UPDATE));
			}
			
			public function destroy():void
			{
				iconImage.unloadAndStop(true);
				iconImage.source = null;
				
				if(continueButton){
					continueButton.removeEventListener(MouseEvent.CLICK, continueUpdate);
					continueButton.styleName = null;
				}
				cancelButton.removeEventListener(MouseEvent.CLICK, cancelUpdate);
				cancelButton.styleName = null;
				
				// becaause we used skins, we have to clear them for garbage collection
				//http://www.firstrowria.com/2009/01/flex-top-5-memory-leaks-in-flex-2-skinning-of-components-eg-button/
				
				
				while(numElements > 0){
					removeElementAt(0);
				}
			}
		]]>
	</fx:Script>
	<!-- update image -->
	<mx:Image source="@Embed('UpdateIcon.png')" x="15" y="25" width="81" height="74" id="iconImage"/>
	
	<!-- check update view -->
	<s:Label y="86" includeIn="CHECK_UPDATE,NO_UPDATE"
			 styleName="label" text="Приложение:" x="140"/>
	<s:Label x="230" y="86" text="{this._applicationName}" includeIn="CHECK_UPDATE,NO_UPDATE" styleName="label"/>
	<s:Label x="107" y="19" includeIn="CHECK_UPDATE,NO_UPDATE,UPDATE_DOWNLOADING,UPDATE_ERROR" 
			 text.NO_UPDATE="Обновлений нет." text.UPDATE_DOWNLOADING="Загружаем обновление" text.UPDATE_ERROR="Ошибка"
			 styleName="label" text="Проверка обновления"/>
	<s:Label x="107" y="50" text="Allow the application to check for updates?" includeIn="CHECK_UPDATE,NO_UPDATE,UPDATE_DOWNLOADING,UPDATE_ERROR" 
			 text.NO_UPDATE="У вас установлена последняя версия!" text.UPDATE_DOWNLOADING="Загрузка в процессе..." 
			 text.UPDATE_ERROR="{_errorText}" styleName="label" text.CHECK_UPDATE="Разрешить приложению проверить обновление?"/>
	<s:Button label="Отмена" id="cancelButton" click="{cancelUpdate()}" height="34" x="107" y="129" 
			  includeIn="CHECK_UPDATE,NO_UPDATE,UPDATE_DOWNLOADING,UPDATE_ERROR,INSTALL_UPDATE,UPDATE_AVAILABLE" label.NO_UPDATE="Закрыть" 
			  label.UPDATE_DOWNLOADING="Отмена" label.UPDATE_ERROR="Закрыть" styleName="button"
			  label.INSTALL_UPDATE="Отложить до перезапуска" x.INSTALL_UPDATE="107" y.INSTALL_UPDATE="168" 
			  label.UPDATE_AVAILABLE="Скачать позже" x.UPDATE_AVAILABLE="107" y.UPDATE_AVAILABLE="168"/>
	<s:Button label="Проверить обновления" id="continueButton" click="{continueUpdate()}" height="34" x="202" y="129" 
			  includeIn="CHECK_UPDATE,INSTALL_UPDATE,UPDATE_AVAILABLE" styleName="button"
			  label.INSTALL_UPDATE="Установить сейчас" x.INSTALL_UPDATE="312" y.INSTALL_UPDATE="168"
			  label.UPDATE_AVAILABLE="Скачать сейчас" x.UPDATE_AVAILABLE="282" y.UPDATE_AVAILABLE="168"/>
	
	<!-- install update view -->
	<s:Label text="{this._installedVersion}" x="230" y="114" includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE" styleName="label"/>
	<s:Label text="{this._updateVersion}" x="230" y="134" includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE" styleName="label"/>
	<s:Label text="Установленная версия:" includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE" styleName="label" x="77" y="114"/>
	<s:Label text="Версия обновления:" includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE" styleName="label" x="97" y="134"/>
	<s:Label text="Приложение:" x="140" y="96" includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE" styleName="label"/>
	<s:Label text="{this._applicationName}" x="230" y="96" includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE" styleName="label"/>
	<mx:ProgressBar id="progressBar" width="411" label=" " mode="manual" height="15" x="107" y="70"
				   creationComplete="{progressBar.setProgress(100,100)}" includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE,UPDATE_DOWNLOADING" labelPlacement="center"/>
	<mx:HRule width="508" styleName="updateDialogHRule" includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE" x="10" y="219"/>
	<s:TextArea id="relaeseNotesTextArea0" text="{_updateDescription}" width="508" height="100" 
				includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE" x="10" y="258"/>
	<s:Label includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE" styleName="label" x="10" y="232" text="Примечания к выпуску "/>
	<s:Label text="Обновление загружено и готово к установке." 
			 x="107" y="50" includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE" text.UPDATE_AVAILABLE="Обновленная версия программы доступна для загрузки" 
			 styleName="label"/>
	<s:Label text="Установить обновление" id="windowTitle4" y="19" x="107" includeIn="INSTALL_UPDATE,UPDATE_AVAILABLE" 
			 text.UPDATE_AVAILABLE="Доступно обновление!" styleName="label"/>
	
	
	
	
	
	
	
</s:Window>
